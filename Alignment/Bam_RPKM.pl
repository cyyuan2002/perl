#!/usr/bin/perl
use strict;
##Depthfile is generated by samtools mpileup

my ($Depfile,$Faslenfile,$outputMode)=@ARGV;
if(@ARGV < 2){
    print "Usage: <Depth_file> <Refseqence_length> <Output_mode>\n";
    exit(1);
}
my %faslength;
my $readlength=100;
my @seqname;
my $control="actin";
$outputMode||=1;

open(my $fh_faslen,"$Faslenfile") || die "Can't open $Faslenfile\n";
while(<$fh_faslen>){
    chomp();
    my @lines=split(/\t/,$_);
    $faslength{$lines[0]}=$lines[1];
    push(@seqname,$lines[0]);
}
chomp();

my %genedepth;
my $tempdepth=0;
my $lastgid="";
open(my $fh_depfile,"$Depfile") || die "Can't open $Depfile\n";
while(<$fh_depfile>){
    chomp();
    my @lines=split(/\t/,$_);
    if($lastgid ne $lines[0]){
        if($lastgid ne ""){
            if(!exists($faslength{$lastgid})){
                die "Error: Can't find length of sequence \"$lastgid\" in length information\n";
            }
            else{
                my $a=$faslength{$lastgid};
                my $rpkm=($tempdepth/$readlength)/$a;
                $genedepth{$lastgid}=$rpkm;
            }
        }
        $lastgid=$lines[0];
        $tempdepth=0;
    }
    $tempdepth+=$lines[3];
}
close $fh_depfile;
{
    my $a=$faslength{$lastgid};
    my $rpkm=($tempdepth/$readlength)/$a;
    $genedepth{$lastgid}=$rpkm;
}

if($outputMode==1){
    foreach my $seqid(@seqname){
        if(!exists($genedepth{$seqid})){
            print "$seqid\t0\t0\n";
        }
        else{
            my $normalize=$genedepth{$seqid}/$genedepth{$control};
            print "$seqid\t$genedepth{$seqid}\t$normalize\n";
        }   
    }
}
else{
    print "$Depfile\t";
    foreach my $seqid(@seqname){
        if(!exists($genedepth{$seqid})){
            print "0\t";
        }
        else{
            my $normalize=$genedepth{$seqid}/$genedepth{$control};
            print "$normalize\t";
        }
    }
    print "\n";
}
